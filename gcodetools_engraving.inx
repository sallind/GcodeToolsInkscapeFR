<?xml version="1.0" encoding="UTF-8"?>

<inkscape-extension xmlns="http://www.inkscape.org/namespace/inkscape/extension">
    <name>Engraving</name>
    <id>ru.cnc-club.filter.gcodetools_engraving</id>
	<dependency type="executable" location="extensions">gcodetools.py</dependency>
	<dependency type="executable" location="extensions">inkex.py</dependency>
	<param name='active-tab' type="notebook">

		<page name='engraving' _gui-text='Engraving'>	
			<param name="engraving-sharp-angle-tollerance" type="float"  precision="5" min="150" max="180" _gui-text="Smooth convex corners between this value and 180 degrees:">175</param>
			<param name="engraving-max-dist" type="float" precision="5" min="0" max="1000" _gui-text="Maximum distance for engraving (mm/inch):">10</param>
			<param name="engraving-newton-iterations" type="int" min="2" max="10" _gui-text="Accuracy factor (2 low to 10 high):">4</param>
			<param name="engraving-draw-calculation-paths" type="boolean" _gui-text="Draw additional graphics to see engraving path">false</param>
			
			<_param name="help" type="description">
Cette fonction crée un chemin pour graver des lettres ou n'importe quelle forme avec des angles vifs.
La profondeur du cutter en fonction du rayon est définie par l'outil.
La profondeur peut être n'importe quelle expression Python. Par exemple:

Cône .... (45 degrés) ......................: w
Cône .... (hauteur / diamètre = 10/3) ..: 10 * w / 3
Sphère .. (rayon r) ...........................: math.sqrt (max (0, r ** 2-w * 2))
Ellipse (axe secondaire r, majeur 4r) .....: math.sqrt (max (0, r ** 2-w ** 2)) * 4</_param>
		</page>

		<page name='options' _gui-text='Options'>
			<param name="Zscale" type="float" precision="5" min="-100000" max="100000" _gui-text="Scale along Z axis:">1</param>			
			<param name="Zoffset" type="float" precision="5" min="-100000" max="100000" _gui-text="Offset along Z axis:">0.0</param>
			<param name="auto_select_paths" type="boolean" _gui-text="Select all paths if nothing is selected">vrai</param>
			<param name="min-arc-radius" type="float" precision="5" min="-1000" max="1000"  _gui-text="Minimum arc radius:">0.05</param>
			<param name="comment-gcode" type="string" _gui-text="Comment Gcode:"></param>
			<param name="comment-gcode-from-properties" type="boolean" _gui-text="Get additional comments from object's properties">Faux</param>
			
		</page>

		<page name='preferences' _gui-text='Preferences'>
			<param name="filename" type="string" _gui-text="File:">output.ngc</param>
			<param name="add-numeric-suffix-to-filename" type="boolean" _gui-text="Add numeric suffix to filename">vrai</param>
			
			<param name="directory" type="string" _gui-text="Directory:">/home</param>

			<param name="Zsafe" type="float" precision="5" min="-1000" max="1000" _gui-text="Z safe height for G00 move over blank:">5</param>
			<param name="unit" type="enum" _gui-text="Units (mm or in):">
				<_item value="G21 (All units in mm)">mm</_item>
				<_item value="G20 (All units in inches)">in</_item>
			</param>
			<param name="postprocessor" type="enum" _gui-text="Post-processor:">
				<_item value=" ">aucun</_item>
				<_item value="parameterize();">Paramétrer Gcode</_item>
				<_item value="flip(y);parameterize();">Inverser l'axe y et paramétrer Gcode</_item>
				<_item value="round(4);">Arrondir toutes les valeurs à 4 chiffres</_item>
				<_item value='regex("G01 Z([0-9\.\-]+).*\(Penetrate\)", lambda match: "G00 Z%f (Fast pre-penetrate)\n%s" %(float(match.group(1))+5, match.group(0)));'>Pré-pénétration rapide</_item>
			</param>
			<param name="postprocessor-custom" type="string" _gui-text="Additional post-processor:"></param>			
			

			<param name="create-log" type="boolean" _gui-text="Generate log file">faux</param>			
			<param name="log-filename" type="string" _gui-text="Full path to log file:"></param>			
			
		</page>

		<page name='help' _gui-text='Help'>
			<_param name="fullhelp" type="description">
Plug-in Gcodetools: convertit les tracés en Gcode (à l'aide d'une interpolation circulaire), effectue des trajectoires décalées et grave des angles vifs à l'aide de coupe-cônes.
Ce plug-in calcule du Gcode pour les chemins en utilisant une interpolation circulaire ou un mouvement linéaire si nécessaire.

Vous trouverez des tutoriels, des manuels et des
Forum de soutien en anglais:
Http://www.cnc-club.ru/gcodetools

Et forum de soutien russe:
Http://www.cnc-club.ru/gcodetoolsru

Crédits: Nick Drobchenko, Vladimir Kalyaev, John Brooker, Henry Nicolas, Chris Lusby Taylor.

Gcodetools ver. 1,7 FR
</_param>	

		</page>

	</param>	
    <effect>
		<effects-menu>
			<submenu _name="Gcodetools"/>
		</effects-menu>
		<object-type>path</object-type>
    </effect>
    <script>
        <command reldir="extensions" interpreter="python">gcodetools.py</command>
    </script>
</inkscape-extension>
